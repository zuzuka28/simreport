/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/document/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UploadRequest"];
                };
            };
            responses: {
                200: components["responses"]["UploadSuccess"];
                400: components["responses"]["BadRequest"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/attribute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["AttributeRequest"];
                };
            };
            responses: {
                200: components["responses"]["AttributeResult"];
                400: components["responses"]["BadRequest"];
                500: components["responses"]["ServerError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/document/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SearchRequest"];
                };
            };
            responses: {
                200: components["responses"]["SearchResult"];
                400: components["responses"]["BadRequest"];
                500: components["responses"]["ServerError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/analyze/{document_id}/similar": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    document_id: components["parameters"]["DocumentId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: components["responses"]["SimilaritySearchResult"];
                400: components["responses"]["BadRequest"];
                500: components["responses"]["ServerError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/analyze/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SimilaritySearchHistoryRequest"];
                };
            };
            responses: {
                200: components["responses"]["SimilaritySearchHistoryResult"];
                400: components["responses"]["BadRequest"];
                500: components["responses"]["ServerError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        UploadRequest: {
            fileID: string;
            groupID?: string[];
            parentID?: string;
            version?: number;
        };
        AttributeRequest: {
            attribute: string;
        };
        SearchRequest: {
            parentID?: string;
            name?: string;
            version?: string;
            groupID?: string[];
        };
        Document: {
            ID?: string;
            ImageIDs?: string[];
            TextContent?: string;
        };
        DocumentSummary: {
            groupID?: string[];
            parentID?: string;
            version?: number;
            id?: string;
            name?: string;
            /** Format: date-time */
            lastUpdated?: string;
        };
        AnalyzedDocumentMatch: {
            id?: string;
            /** Format: float */
            rate?: number;
            highlights?: string[];
            similarImages?: string[];
        };
        SimilaritySearchHistoryRequest: {
            documentID?: string;
            limit?: number;
            offset?: number;
            /** Format: date-time */
            dateFrom?: string;
            /** Format: date-time */
            dateTo?: string;
        };
        SimilaritySearchHistory: {
            /** Format: date-time */
            date?: string;
            documentID?: string;
            id?: string;
            matches?: components["schemas"]["AnalyzedDocumentMatch"][];
        };
        Attribute: {
            label: string;
            value: string;
        };
    };
    responses: {
        UploadSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    documentID?: string;
                };
            };
        };
        AttributeResult: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    items?: components["schemas"]["Attribute"][];
                };
            };
        };
        SearchResult: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    documents?: components["schemas"]["DocumentSummary"][];
                };
            };
        };
        SimilaritySearchResult: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    documents?: components["schemas"]["AnalyzedDocumentMatch"][];
                };
            };
        };
        SimilaritySearchHistoryResult: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    documents?: components["schemas"]["SimilaritySearchHistory"][];
                    count?: number;
                };
            };
        };
        DocumentNotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    error?: string;
                };
            };
        };
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    error?: string;
                };
            };
        };
        ServerError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    error?: string;
                };
            };
        };
    };
    parameters: {
        DocumentId: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
